# Generated by Django 5.0.6 on 2024-07-12 13:25

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                (
                    'full_name',
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        validators=[django.core.validators.MinLengthValidator(2)],
                        verbose_name='full name',
                    ),
                ),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                (
                    'is_staff',
                    models.BooleanField(default=False, help_text='Make the account as admin.', verbose_name='is staff'),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True, help_text='Active|Disable the account.', verbose_name='is active'
                    ),
                ),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated Date')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='Joined Date')),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'get_latest_by': 'joined_at',
            },
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(
                check=models.Q(('phone__regex', '^(\\+38)\\s(\\(\\d{3}\\))\\s(\\d{3})\\s(\\d{4})$')),
                name='phone_number_in_valid_format',
                violation_error_code='invalid_phone_number_format',
                violation_error_message='The phone number must be in the following format: +38 (012) 345 6789.',
            ),
        ),
    ]
